#!/usr/bin/env python
import os
import imp

pathname = os.path.dirname(os.path.abspath(__file__))
DSET = os.path.join(os.path.abspath(pathname), 'dset')
dset = imp.load_source('dset', DSET) 
LAST_CONTAINER_FILE = os.path.abspath(os.path.join(pathname, '.d-tool.last.container.txt'))

def get_container(reqiured_container):
    if reqiured_container is None:
      reqiured_container = get_last_container()
    containers = os.popen('docker ps --format="{{.Names}}"').read().split()
    filtered = [c for c in containers if reqiured_container in c]
    if len(filtered) > 1:
        full_container_name = "{}_{}_1".format(dset.compose_project(), reqiured_container)
        exact = [c for c in containers if full_container_name in c]
        if len(exact) == 1:
            filtered = exact
    if len(filtered) > 1:
        print "more that 1 running container match: {}".format(filtered)
        exit(1)
    if len(filtered) == 0:
        print "no running container match"
        exit(1)

    set_last_container(filtered[0])
    return filtered[0]

def get_last_container():
    with open(LAST_CONTAINER_FILE, 'r') as configfile:
        return configfile.readline()


def set_last_container(container):
    with open(LAST_CONTAINER_FILE, 'w') as configfile:
        configfile.write(container)

